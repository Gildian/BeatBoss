{"ast":null,"code":"var _jsxFileName = \"/Users/gildiangonzales/Projects/github/BeatBoss/frontend/beatboss/src/views/Play/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./styles.scss\";\nimport Practice from \"./Practice\";\nimport Online from './Online';\nimport { useLocation, useNavigate } from 'react-router-dom';\n//import { api } from '../../services/api';\n//import Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Play() {\n  _s();\n  /*\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [matchType, setMatchType] = useState('');\n  */\n  let display = matchType === 'practice' ? /*#__PURE__*/_jsxDEV(Practice, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : matchType === 'online' ? /*#__PURE__*/_jsxDEV(Online, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    const fetchMatchData = async () => {\n      try {\n        const res = await api.get(`/solo/${Cookies.get('matchId')}?option=matchType`);\n        setMatchType(res.data.optionData);\n      } catch (error) {\n        console.log(`${error}`);\n        navigate('/');\n      }\n    };\n    fetchMatchData();\n  }, []);\n  return display;\n}\n_s(Play, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["React","useEffect","useState","Practice","Online","useLocation","useNavigate","jsxDEV","_jsxDEV","Play","_s","display","matchType","fileName","_jsxFileName","lineNumber","columnNumber","children","fetchMatchData","res","api","get","Cookies","setMatchType","data","optionData","error","console","log","navigate","_c","$RefreshReg$"],"sources":["/Users/gildiangonzales/Projects/github/BeatBoss/frontend/beatboss/src/views/Play/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport \"./styles.scss\";\nimport Practice from \"./Practice\";\nimport Online from './Online';\nimport { useLocation, useNavigate } from 'react-router-dom';\n//import { api } from '../../services/api';\n//import Cookies from 'js-cookie';\n\nfunction Play() {\n  /*\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [matchType, setMatchType] = useState('');\n  */\n  let display = \n  matchType === 'practice'\n  ? <Practice />\n  : matchType === 'online'\n  ? <Online />\n  : <h1>Loading...</h1>\n\n  useEffect(() => {\n    const fetchMatchData = async () => {\n      try {\n        const res = await api.get(`/solo/${Cookies.get('matchId')}?option=matchType`);\n        setMatchType(res.data.optionData);\n      } catch (error) {\n        console.log(`${error}`)\n        navigate('/');\n      }\n    }\n\n    fetchMatchData();\n  }, [])\n\n\n  return display;\n}\n\nexport default Play"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;AACF;AACA;AACA;AACA;EACE,IAAIC,OAAO,GACXC,SAAS,KAAK,UAAU,gBACtBJ,OAAA,CAACL,QAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GACZJ,SAAS,KAAK,QAAQ,gBACtBJ,OAAA,CAACJ,MAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBACVR,OAAA;IAAAS,QAAA,EAAI;EAAU;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAErBf,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAE,SAAQC,OAAO,CAACD,GAAG,CAAC,SAAS,CAAE,mBAAkB,CAAC;QAC7EE,YAAY,CAACJ,GAAG,CAACK,IAAI,CAACC,UAAU,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAE,GAAEF,KAAM,EAAC,CAAC;QACvBG,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC;IAEDX,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAGN,OAAOP,OAAO;AAChB;AAACD,EAAA,CA7BQD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA+Bb,eAAeA,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}